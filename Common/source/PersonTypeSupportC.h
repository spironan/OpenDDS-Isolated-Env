// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:148

#ifndef _TAO_IDL_C__DEV_OPENDDS_STANDALONE_ISOLATEDENV_IDL_PERSON__PERSONTYPESUPPORTC_UZ77XH_H_
#define _TAO_IDL_C__DEV_OPENDDS_STANDALONE_ISOLATEDENV_IDL_PERSON__PERSONTYPESUPPORTC_UZ77XH_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "PersonC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"
#include "dds/DdsDynamicDataC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 21
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace Identity
{

  
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Identity::Person, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> PersonSeq;
  
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_PersonSeq;
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_IDENTITY_PERSONTYPESUPPORT__VAR_OUT_CH_)
#define _IDENTITY_PERSONTYPESUPPORT__VAR_OUT_CH_

  class PersonTypeSupport;
  typedef PersonTypeSupport *PersonTypeSupport_ptr;
  typedef TAO_Objref_Var_T<PersonTypeSupport> PersonTypeSupport_var;
  typedef TAO_Objref_Out_T<PersonTypeSupport> PersonTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class  PersonTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef PersonTypeSupport_ptr _ptr_type;
    typedef PersonTypeSupport_var _var_type;
    typedef PersonTypeSupport_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PersonTypeSupport_ptr _duplicate (PersonTypeSupport_ptr obj);

    static void _tao_release (PersonTypeSupport_ptr obj);

    static PersonTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static PersonTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PersonTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::Identity::Person & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::Identity::Person * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::Identity::Person & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::Identity::Person & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::Identity::Person & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::Identity::Person & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::Identity::Person_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::Identity::Person_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PersonTypeSupport (void);

    

    virtual ~PersonTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (PersonTypeSupport (const PersonTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonTypeSupport (PersonTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (PersonTypeSupport &operator= (const PersonTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonTypeSupport &operator= (PersonTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_PersonTypeSupport;
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_IDENTITY_PERSONDATAWRITER__VAR_OUT_CH_)
#define _IDENTITY_PERSONDATAWRITER__VAR_OUT_CH_

  class PersonDataWriter;
  typedef PersonDataWriter *PersonDataWriter_ptr;
  typedef TAO_Objref_Var_T<PersonDataWriter> PersonDataWriter_var;
  typedef TAO_Objref_Out_T<PersonDataWriter> PersonDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class  PersonDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef PersonDataWriter_ptr _ptr_type;
    typedef PersonDataWriter_var _var_type;
    typedef PersonDataWriter_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PersonDataWriter_ptr _duplicate (PersonDataWriter_ptr obj);

    static void _tao_release (PersonDataWriter_ptr obj);

    static PersonDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static PersonDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PersonDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Identity::Person & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Identity::Person & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Identity::Person & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Identity::Person & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Identity::Person & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Identity::Person & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Identity::Person & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Identity::Person & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Identity::Person & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Identity::Person & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PersonDataWriter (void);

    

    virtual ~PersonDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (PersonDataWriter (const PersonDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonDataWriter (PersonDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (PersonDataWriter &operator= (const PersonDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonDataWriter &operator= (PersonDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_PersonDataWriter;
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_IDENTITY_PERSONDATAREADER__VAR_OUT_CH_)
#define _IDENTITY_PERSONDATAREADER__VAR_OUT_CH_

  class PersonDataReader;
  typedef PersonDataReader *PersonDataReader_ptr;
  typedef TAO_Objref_Var_T<PersonDataReader> PersonDataReader_var;
  typedef TAO_Objref_Out_T<PersonDataReader> PersonDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class  PersonDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef PersonDataReader_ptr _ptr_type;
    typedef PersonDataReader_var _var_type;
    typedef PersonDataReader_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PersonDataReader_ptr _duplicate (PersonDataReader_ptr obj);

    static void _tao_release (PersonDataReader_ptr obj);

    static PersonDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static PersonDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PersonDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Identity::PersonSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Identity::PersonSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Identity::Person & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Identity::Person & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Identity::PersonSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Identity::PersonSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Identity::PersonSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Identity::Person & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Identity::Person & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PersonDataReader (void);

    

    virtual ~PersonDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (PersonDataReader (const PersonDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonDataReader (PersonDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (PersonDataReader &operator= (const PersonDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (PersonDataReader &operator= (PersonDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_PersonDataReader;


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module Identity
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_IDENTITY_PERSONTYPESUPPORT__TRAITS_)
#define _IDENTITY_PERSONTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::Identity::PersonTypeSupport>
  {
    static ::Identity::PersonTypeSupport_ptr duplicate (
        ::Identity::PersonTypeSupport_ptr p);
    static void release (
        ::Identity::PersonTypeSupport_ptr p);
    static ::Identity::PersonTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Identity::PersonTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IDENTITY_PERSONDATAWRITER__TRAITS_)
#define _IDENTITY_PERSONDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::Identity::PersonDataWriter>
  {
    static ::Identity::PersonDataWriter_ptr duplicate (
        ::Identity::PersonDataWriter_ptr p);
    static void release (
        ::Identity::PersonDataWriter_ptr p);
    static ::Identity::PersonDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Identity::PersonDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IDENTITY_PERSONDATAREADER__TRAITS_)
#define _IDENTITY_PERSONDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::Identity::PersonDataReader>
  {
    static ::Identity::PersonDataReader_ptr duplicate (
        ::Identity::PersonDataReader_ptr p);
    static void release (
        ::Identity::PersonDataReader_ptr p);
    static ::Identity::PersonDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Identity::PersonDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

 void operator<<= (::CORBA::Any &, Identity::PersonTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, Identity::PersonTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Identity::PersonTypeSupport_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

 void operator<<= (::CORBA::Any &, Identity::PersonDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, Identity::PersonDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Identity::PersonDataWriter_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

 void operator<<= (::CORBA::Any &, Identity::PersonDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, Identity::PersonDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Identity::PersonDataReader_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "PersonTypeSupportC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

