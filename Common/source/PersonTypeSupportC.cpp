// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "PersonTypeSupportC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "PersonTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\alias_typecode.cpp:47


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Identity_PersonSeq_GUARD
#define _TAO_TYPECODE_Identity_PersonSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Identity_PersonSeq_0 (
          ::CORBA::tk_sequence,
          &Identity::_tc_Person,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Identity_PersonSeq_0 =
        &Identity_PersonSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Identity_PersonSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Identity_PersonSeq (
    ::CORBA::tk_alias,
    "IDL:Identity/PersonSeq:1.0",
    "PersonSeq",
    &TAO::TypeCode::tc_Identity_PersonSeq_0);
  

namespace Identity
{
  ::CORBA::TypeCode_ptr const _tc_PersonSeq =
    &_tao_tc_Identity_PersonSeq;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Identity::PersonTypeSupport.

Identity::PersonTypeSupport_ptr
TAO::Objref_Traits<Identity::PersonTypeSupport>::duplicate (
    Identity::PersonTypeSupport_ptr p)
{
  return Identity::PersonTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<Identity::PersonTypeSupport>::release (
    Identity::PersonTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

Identity::PersonTypeSupport_ptr
TAO::Objref_Traits<Identity::PersonTypeSupport>::nil (void)
{
  return Identity::PersonTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Identity::PersonTypeSupport>::marshal (
    const Identity::PersonTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



Identity::PersonTypeSupport::PersonTypeSupport (void)
{}

Identity::PersonTypeSupport::~PersonTypeSupport (void)
{
}

void
Identity::PersonTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  PersonTypeSupport *_tao_tmp_pointer =
    static_cast<PersonTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Identity::PersonTypeSupport_ptr
Identity::PersonTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonTypeSupport::_duplicate (
      dynamic_cast<PersonTypeSupport_ptr> (_tao_objref));
}

Identity::PersonTypeSupport_ptr
Identity::PersonTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonTypeSupport::_duplicate (
      dynamic_cast<PersonTypeSupport_ptr> (_tao_objref));
}

Identity::PersonTypeSupport_ptr
Identity::PersonTypeSupport::_nil (void)
{
  return 0;
}

Identity::PersonTypeSupport_ptr
Identity::PersonTypeSupport::_duplicate (PersonTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Identity::PersonTypeSupport::_tao_release (PersonTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Identity::PersonTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Identity/PersonTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Identity::PersonTypeSupport::_interface_repository_id (void) const
{
  return "IDL:Identity/PersonTypeSupport:1.0";
}

::CORBA::Boolean
Identity::PersonTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Identity_PersonTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:Identity/PersonTypeSupport:1.0",
    "PersonTypeSupport");
  

namespace Identity
{
  ::CORBA::TypeCode_ptr const _tc_PersonTypeSupport =
    &_tao_tc_Identity_PersonTypeSupport;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Identity::PersonDataWriter.

Identity::PersonDataWriter_ptr
TAO::Objref_Traits<Identity::PersonDataWriter>::duplicate (
    Identity::PersonDataWriter_ptr p)
{
  return Identity::PersonDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<Identity::PersonDataWriter>::release (
    Identity::PersonDataWriter_ptr p)
{
  ::CORBA::release (p);
}

Identity::PersonDataWriter_ptr
TAO::Objref_Traits<Identity::PersonDataWriter>::nil (void)
{
  return Identity::PersonDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Identity::PersonDataWriter>::marshal (
    const Identity::PersonDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



Identity::PersonDataWriter::PersonDataWriter (void)
{}

Identity::PersonDataWriter::~PersonDataWriter (void)
{
}

void
Identity::PersonDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  PersonDataWriter *_tao_tmp_pointer =
    static_cast<PersonDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Identity::PersonDataWriter_ptr
Identity::PersonDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonDataWriter::_duplicate (
      dynamic_cast<PersonDataWriter_ptr> (_tao_objref));
}

Identity::PersonDataWriter_ptr
Identity::PersonDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonDataWriter::_duplicate (
      dynamic_cast<PersonDataWriter_ptr> (_tao_objref));
}

Identity::PersonDataWriter_ptr
Identity::PersonDataWriter::_nil (void)
{
  return 0;
}

Identity::PersonDataWriter_ptr
Identity::PersonDataWriter::_duplicate (PersonDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Identity::PersonDataWriter::_tao_release (PersonDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Identity::PersonDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Identity/PersonDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Identity::PersonDataWriter::_interface_repository_id (void) const
{
  return "IDL:Identity/PersonDataWriter:1.0";
}

::CORBA::Boolean
Identity::PersonDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Identity_PersonDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:Identity/PersonDataWriter:1.0",
    "PersonDataWriter");
  

namespace Identity
{
  ::CORBA::TypeCode_ptr const _tc_PersonDataWriter =
    &_tao_tc_Identity_PersonDataWriter;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Identity::PersonDataReader.

Identity::PersonDataReader_ptr
TAO::Objref_Traits<Identity::PersonDataReader>::duplicate (
    Identity::PersonDataReader_ptr p)
{
  return Identity::PersonDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<Identity::PersonDataReader>::release (
    Identity::PersonDataReader_ptr p)
{
  ::CORBA::release (p);
}

Identity::PersonDataReader_ptr
TAO::Objref_Traits<Identity::PersonDataReader>::nil (void)
{
  return Identity::PersonDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Identity::PersonDataReader>::marshal (
    const Identity::PersonDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



Identity::PersonDataReader::PersonDataReader (void)
{}

Identity::PersonDataReader::~PersonDataReader (void)
{
}

void
Identity::PersonDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  PersonDataReader *_tao_tmp_pointer =
    static_cast<PersonDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Identity::PersonDataReader_ptr
Identity::PersonDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonDataReader::_duplicate (
      dynamic_cast<PersonDataReader_ptr> (_tao_objref));
}

Identity::PersonDataReader_ptr
Identity::PersonDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PersonDataReader::_duplicate (
      dynamic_cast<PersonDataReader_ptr> (_tao_objref));
}

Identity::PersonDataReader_ptr
Identity::PersonDataReader::_nil (void)
{
  return 0;
}

Identity::PersonDataReader_ptr
Identity::PersonDataReader::_duplicate (PersonDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Identity::PersonDataReader::_tao_release (PersonDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Identity::PersonDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Identity/PersonDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Identity::PersonDataReader::_interface_repository_id (void) const
{
  return "IDL:Identity/PersonDataReader:1.0";
}

::CORBA::Boolean
Identity::PersonDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Identity_PersonDataReader (
    ::CORBA::tk_local_interface,
    "IDL:Identity/PersonDataReader:1.0",
    "PersonDataReader");
  

namespace Identity
{
  ::CORBA::TypeCode_ptr const _tc_PersonDataReader =
    &_tao_tc_Identity_PersonDataReader;
}
// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonTypeSupport_ptr _tao_elem)
{
  Identity::PersonTypeSupport_ptr _tao_objptr =
    Identity::PersonTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Identity::PersonTypeSupport>::insert (
    _tao_any,
    Identity::PersonTypeSupport::_tao_any_destructor,
    Identity::_tc_PersonTypeSupport,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Identity::PersonTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Identity::PersonTypeSupport>::extract (
        _tao_any,
        Identity::PersonTypeSupport::_tao_any_destructor,
        Identity::_tc_PersonTypeSupport,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonDataWriter_ptr _tao_elem)
{
  Identity::PersonDataWriter_ptr _tao_objptr =
    Identity::PersonDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Identity::PersonDataWriter>::insert (
    _tao_any,
    Identity::PersonDataWriter::_tao_any_destructor,
    Identity::_tc_PersonDataWriter,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Identity::PersonDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Identity::PersonDataWriter>::extract (
        _tao_any,
        Identity::PersonDataWriter::_tao_any_destructor,
        Identity::_tc_PersonDataWriter,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<Identity::PersonDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonDataReader_ptr _tao_elem)
{
  Identity::PersonDataReader_ptr _tao_objptr =
    Identity::PersonDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Identity::PersonDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Identity::PersonDataReader>::insert (
    _tao_any,
    Identity::PersonDataReader::_tao_any_destructor,
    Identity::_tc_PersonDataReader,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Identity::PersonDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Identity::PersonDataReader>::extract (
        _tao_any,
        Identity::PersonDataReader::_tao_any_destructor,
        Identity::_tc_PersonDataReader,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL



